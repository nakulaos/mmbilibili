user nginx;
worker_processes  1;
error_log /var/log/nginx/error.log debug;
pid        /var/run/nginx.pid;
events{
    worker_connections 1024;
}

http{
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile        on;
    client_max_body_size 200M;
    client_header_timeout 60s;
    client_body_timeout 60s;
    keepalive_timeout 60s;
    send_timeout 60s;

    server{
        listen 8081;

        # 允许 请求来源
        add_header Access-Control-Allow-Origin *;
        # 允许 请求方法
        add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
        # 允许 请求头
        add_header Access-Control-Allow-Headers 'Keep-Alive, User-Agent, If-Modified-Since, Cache-Control, Content-Type, Authorization';
        # 允许 请求携带cookie，这个值只能设为true，如果不允许就不要这一行
        # add_header Access-Control-Allow-Credentials true;
        # 指定浏览器 getResponseHeader() 方法可以获取的 header
        add_header Access-Control-Expose-Headers 'Authorization';
        # 本次预检的有效时间
        add_header Access-Control-Max-Age 172800;

        location / {
            if ($request_method = 'OPTIONS') {
                # 204 代表 No Content，成功处理请求
                return 204;
            }
        }

        location ~ /v1/user/{
            # 对预检请求返回 204
            if ($request_method = 'OPTIONS') {
                # 204 代表 No Content，成功处理请求
                return 204;
            }
            proxy_pass http://host.docker.internal:38080;
        }

        location ~ /v1/live/{
            # 对预检请求返回 204
            if ($request_method = 'OPTIONS') {
                # 204 代表 No Content，成功处理请求
                return 204;
            }
            proxy_pass http://host.docker.internal:38081;
        }


    }
}