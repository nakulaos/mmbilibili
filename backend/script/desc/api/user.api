syntax = "v1"

import "./common.api"

info (
	title:   "type title here"
	desc:    "type desc here"
	author:  "type author here"
	email:   "type email here"
	version: "type version here"
)

type (
	// 用户登录
	LoginWithUsernameReq {
		Username string `json:"username" validate:"min_len=3,max_len=12,required,alphanum"`
		Password string `json:"password" validate:"min_len=8,max_len=20,password,required"`
	}
	// 邮箱登录
	LoginWithEmailReq {
		Email    string `json:"email" validate:"required,email"`
		Password string `json:"password" validate:"min_len=8,max_len=20,password,required"`
	}
	// 手机号登录
	LoginWithPhoneReq {
		Phone    string `json:"phone" validate:"required,phone"`
		Password string `json:"password" validate:"min_len=8,max_len=20,password,required"`
	}
	// 用户注册
	RegisterReq {
		Username string `json:"username" validate:"min_len=3,max_len=12,required,alphanum"`
		Password string `json:"password" validate:"min_len=8,max_len=20,password,required"`
	}
	//    User {
	//        Id             uint32 `json:"id"`
	//        Username       string `json:"username"`
	//        Nickname       string `json:"nickname"`
	//        Avatar         string `json:"avatar"`
	//        Gender         uint32 `json:"gender"`
	//        Role           uint32 `json:"role"`
	//        FollowerCount  int    `json:"follower_count"`
	//        FollowingCount int    `json:"following_count"`
	//        LikeCount      int    `json:"like_count"`
	//        StarCount      int    `json:"star_count"`
	//        SelfStarCount  int    `json:"self_star_count"`
	//        SelfLikeCount  int    `json:"self_like_count"`
	//        LiveCount      int    `json:"live_count"`
	//        WorkCount      int    `json:"work_count"`
	//        FriendCount    int    `json:"friend_count"`
	//        Phone          string `json:"phone"`
	//        Email          string `json:"email"`
	//        Status          uint  `json:"status"`
	//    }
	LoginResp {
		AccessToken string `json:"accessToken"`
		UserID      int64  `json:"user_id"`
		UserInfo    User   `json:"userinfo"`
	}
	// 用户信息
	UpdateUserInfoReq {
		Nickname string `json:"nickname,optional" validate:"min_len=1,max_len=12"`
		Avatar   string `json:"avatar,optional" validate:"url"`
		Gender   uint32 `json:"gender,optional" validate:"min=0,max=2"`
		Role     uint32 `json:"role,optional" validate:"min=0,max=2"`
		Phone    string `json:"phone,optional" validate:"telephone"`
		Email    string `json:"email,optional" validate:"email"`
	}
	UpdateUserInfoResp {
		UserInfo User `json:"userinfo"`
	}
	LogoutReq  {}
	FollowUserReq {
		UserID uint `json:"user_id" validate:"required"`
		Action int  `json:"action" validate:"required,min=1,max=2"`
	}
	FollowerListReq {
		Page     int `json:"page,optional" validate:"omitempty,min=1"`
		PageSize int `json:"page_size,optional" validate:"omitempty,min=1,max=100"`
		Total    int `json:"total,optional" validate:"omitempty"`
	}
	FollowerListResp {
		Total int    `json:"total"`
		List  []User `json:"list"`
	}
	FollowingListReq {
		Page     int `json:"page,optional" validate:"omitempty,min=1"`
		PageSize int `json:"page_size,optional" validate:"omitempty,min=1,max=100"`
		Total    int `json:"total,optional" validate:"omitempty"`
	}
	FollowingListResp {
		Total int    `json:"total"`
		List  []User `json:"list"`
	}
	FriendListReq {
		Page     int `json:"page,optional" validate:"omitempty,min=1"`
		PageSize int `json:"page_size,optional" validate:"omitempty,min=1,max=100"`
		Total    int `json:"total,optional" validate:"omitempty"`
	}
	FriendListResp {
		Total int    `json:"total"`
		List  []User `json:"list"`
	}
	UserUploadFileReq {
		Kind string `form:"kind" validate:"required,oneof=avatar cover video"`
	}
	UserUploadFileResp {
		FileURL  string `json:"url"`
		CoverURL string `json:"cover_url"`
	}
)

@server (
	prefix:     /v1/user
	group:      common
	middleware: CorsMiddleware,ApiHitMiddleware,ErrorcodeMiddleware
)
service user-api {
	@handler LoginWithUsername
	post /login/username (LoginWithUsernameReq) returns (LoginResp)

	@handler LoginWithEmail
	post /login/email (LoginWithEmailReq) returns (LoginResp)

	@handler LoginWithPhone
	post /login/phone (LoginWithPhoneReq) returns (LoginResp)

	@handler Register
	post /register (RegisterReq) returns (LoginResp)
}

@server (
	prefix:     /v1/user
	jwt:        Auth
	group:      follow
	middleware: CorsMiddleware,AuthMiddleware,ApiHitMiddleware,ErrorcodeMiddleware
)
service user-api {
	@handler UpdateUserInfo
	post /userinfo (UpdateUserInfoReq) returns (UpdateUserInfoResp)

	@handler Logout
	post /logout (LogoutReq)

	@doc "关注用户"
	@handler FollowUser
	post /follow (FollowUserReq)

	@doc "粉丝列表"
	@handler FollowerList
	post /follower/list (FollowerListReq) returns (FollowerListResp)

	@doc "关注列表"
	@handler FollowingList
	post /following/list (FollowingListReq) returns (FollowingListResp)

	@doc "好友列表"
	@handler FriendList
	post /friend/list (FriendListReq) returns (FriendListResp)
}

@server (
	prefix:     /v1/user
	jwt:        Auth
	group:      file
	middleware: CorsMiddleware,AuthMiddleware,ApiHitMiddleware,ErrorcodeMiddleware
)
service user-api {
	@doc "上传文件"
	@handler UserUploadFile
	post /upload/file (UserUploadFileReq) returns (UserUploadFileResp)
}

