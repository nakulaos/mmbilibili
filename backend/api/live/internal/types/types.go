// Code generated by goctl. DO NOT EDIT.
package types

type EndLiveReq struct {
	LiveID uint `json:"live_id" validate:"required"`
}

type LiveComment struct {
	CommentID uint   `json:"comment_id"`
	UserID    uint   `json:"user_id"`
	LiveID    uint   `json:"live_id"`
	Content   string `json:"content"`
	CreateAt  int64  `json:"create_at"`
}

type LiveCommentListReq struct {
	LiveID   uint `json:"live_id" validate:"required"`
	Page     int  `json:"page" validate:"min=1"`
	PageSize int  `json:"page_size" validate:"min=1,max=100"`
}

type LiveCommentListResp struct {
	Total int           `json:"total"`
	List  []LiveComment `json:"list"`
}

type LiveCommentReq struct {
	LiveID   uint   `json:"live_id" validate:"required"`
	Content  string `json:"content" validate:"required"`
	SendTime uint64 `json:"send_time" validate:""`
}

type LiveCommentResp struct {
	CommentID uint `json:"comment_id"`
}

type LiveDeleteCommentReq struct {
	CommentID uint `json:"comment_id" validate:"required"`
}

type LiveDetailReq struct {
	LiveID uint `json:"live_id" validate:"required"`
}

type LiveDetailResp struct {
	LiveInfo LiveInfo `json:"live_info"`
}

type LiveInfo struct {
	LiveID       uint     `json:"id"`
	UserID       uint     `json:"user_id"`
	Title        string   `json:"title"`
	Cover        string   `json:"cover"`
	Status       uint32   `json:"status"`
	StartTime    int64    `json:"start_time"`
	EndTime      int64    `json:"end_time"`
	WatchCount   int      `json:"watch_count"`
	LikeCount    int      `json:"like_count"`
	CommentCount int      `json:"comment_count"`
	ShareCount   int      `json:"share_count"`
	IsLike       bool     `json:"is_like"`
	IsFollow     bool     `json:"is_follow"`
	IsStar       bool     `json:"is_star"` // 这个字段没有实际含义
	IsSelf       bool     `json:"is_self"` // 是否是自己的直播
	Author       User     `json:"author"`
	Type         int      `json:"type"`
	Description  string   `json:"description"`
	PlayerUrl    string   `json:"player_url"`
	CoverUrl     string   `json:"cover_url"`
	IsOver       bool     `json:"is_over"`
	Category     []string `json:"category"`
	Tags         []string `json:"tags"`
	Partition    string   `json:"partition"`
	RoomID       uint     `json:"room_id"`
	Token        string   `json:"token"` // 推流token或者拉流token
}

type LiveLikeReq struct {
	LiveID uint `json:"live_id" validate:"required"`
	Action int  `json:"action" validate:"required"`
}

type LiveLikeResp struct {
	LikeCount int `json:"like_count"`
}

type LiveListReq struct {
	Page          int    `json:"page" validate:"min=1"`
	PageSize      int    `json:"page_size" validate:"min=1,max=100"`
	RecommendType string `json:"type" validate:""`
	ItemID        uint   `json:"item_id" validate:""`
	Category      string `json:"category" validate:""`
	Total         int    `json:"total" validate:""`
}

type LiveListResp struct {
	Total int        `json:"total"`
	List  []LiveInfo `json:"list"`
}

type OnPublicStreamReq struct {
	App           string `json:"app"`           // 流应用名
	ID            string `json:"id"`            // TCP 链接唯一 ID
	IP            string `json:"ip"`            // 推流器 IP
	Params        string `json:"params"`        // 推流 URL 参数
	Port          uint16 `json:"port"`          // 推流器端口号
	Schema        string `json:"schema"`        // 推流协议, 可能是 rtsp、rtmp
	Stream        string `json:"stream"`        // 流 ID
	VHost         string `json:"vhost"`         // 流虚拟主机
	MediaServerID string `json:"mediaServerId"` // 服务器 ID, 通过配置文件设置
}

type OnPublicStreamResp struct {
}

type OnStreamChangeReq struct {
	App           string `json:"app"`           // 流应用名
	Regist        bool   `json:"regist"`        // 流注册或注销
	Schema        string `json:"schema"`        // rtsp 或 rtmp
	Stream        string `json:"stream"`        // 流 ID
	VHost         string `json:"vhost"`         // 流虚拟主机
	MediaServerID string `json:"mediaServerId"` // 服务器 ID, 通过配置文件设置
}

type OnStreamChangeResp struct {
}

type StartLiveReq struct {
	Title       string   `json:"title" validate:"required"`
	Cover       string   `json:"cover" validate:"required,url"`
	Description string   `json:"description" validate:""`
	Category    []string `json:"category" validate:""`
	Tags        []string `json:"tags" validate:""`
	Partition   string   `json:"partition" validate:"required"`
}

type User struct {
	Id             uint32 `json:"id"`
	Username       string `json:"username"`
	Nickname       string `json:"nickname"`
	Avatar         string `json:"avatar"`
	Gender         uint32 `json:"gender"`
	Role           uint32 `json:"role"`
	FollowerCount  int    `json:"follower_count"`
	FollowingCount int    `json:"following_count"`
	LikeCount      int    `json:"like_count"`
	StarCount      int    `json:"star_count"`
	SelfStarCount  int    `json:"self_star_count"`
	SelfLikeCount  int    `json:"self_like_count"`
	LiveCount      int    `json:"live_count"`
	WorkCount      int    `json:"work_count"`
	FriendCount    int    `json:"friend_count"`
	Phone          string `json:"phone"`
	Email          string `json:"email"`
	Status         uint   `json:"status"`
}
