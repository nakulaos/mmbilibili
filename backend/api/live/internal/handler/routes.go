// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	auth "backend/api/live/internal/handler/auth"
	callback "backend/api/live/internal/handler/callback"
	common "backend/api/live/internal/handler/common"
	"backend/api/live/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware, serverCtx.ApiHitMiddleware, serverCtx.ErrorcodeMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/live/comment",
					Handler: auth.LiveCommentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/live/delete/comment",
					Handler: auth.LiveDeleteCommentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/live/end",
					Handler: auth.EndLiveHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/live/like",
					Handler: auth.LiveLikeHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/live/list/gorse",
					Handler: auth.LiveListByGorseHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/live/start",
					Handler: auth.StartLiveHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.ApiHitMiddleware, serverCtx.ErrorcodeMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/live/zlmediakit/onPublicStream",
					Handler: callback.OnPublicStreamHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/live/zlmediakit/onStreamChange",
					Handler: callback.OnStreamChangeHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.ApiHitMiddleware, serverCtx.ErrorcodeMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/live/info",
					Handler: common.LiveInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/live/list/comment",
					Handler: common.LiveCommentListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/live/list/liveinfo",
					Handler: common.LiveListHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1"),
	)
}
