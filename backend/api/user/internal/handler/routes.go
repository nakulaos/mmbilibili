// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	common "backend/api/user/internal/handler/common"
	file "backend/api/user/internal/handler/file"
	follow "backend/api/user/internal/handler/follow"
	"backend/api/user/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.ApiHitMiddleware, serverCtx.ErrorcodeMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/login/email",
					Handler: common.LoginWithEmailHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/login/phone",
					Handler: common.LoginWithPhoneHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/login/username",
					Handler: common.LoginWithUsernameHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/register",
					Handler: common.RegisterHandler(serverCtx),
				},
			}...,
		),
		rest.WithPrefix("/v1/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware, serverCtx.ApiHitMiddleware, serverCtx.ErrorcodeMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/upload/file",
					Handler: file.UserUploadFileHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/user"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.CorsMiddleware, serverCtx.AuthMiddleware, serverCtx.ApiHitMiddleware, serverCtx.ErrorcodeMiddleware},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/follow",
					Handler: follow.FollowUserHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/follower/list",
					Handler: follow.FollowerListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/following/list",
					Handler: follow.FollowingListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/friend/list",
					Handler: follow.FriendListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/logout",
					Handler: follow.LogoutHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/userinfo",
					Handler: follow.UpdateUserInfoHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/v1/user"),
	)
}
