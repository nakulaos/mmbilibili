syntax = "proto3";

package user;

option go_package = "/user";

// 用户登录请求
message LoginWithUsernameReq {
  string username = 1; // 账号名
  string password = 2; // 密码
}

message LoginWithEmailReq {
  string email = 1;    // 邮箱
  string password = 2; // 密码
}

message LoginWithPhoneReq {
  string phone = 1;    // 手机号
  string password = 2; // 密码
}

// 用户注册请求
message RegisterReq {
  string username = 1; // 账号名
  string password = 2; // 密码
}

// 用户信息
message User {
  int64 id = 1; // 用户ID
  string username = 2; // 账号名
  string nickname = 3; // 昵称
  string avatar = 4; // 头像
  uint32 gender = 5; // 性别
  uint32 role = 6; // 角色
  int64 follower_count = 7; // 粉丝数
  int64 following_count = 8; // 关注数
  int64 like_count = 9; // 被点赞数
  int64 star_count = 10; // 被收藏数
  int64 self_star_count = 11; // 自己收藏作品数
  int64 self_like_count = 12; // 自己点赞作品数
  int64 live_count = 13; // 直播次数
  int64 work_count = 14; // 作品数
  int64 friend_count = 15; // 朋友数
  string phone = 16; // 手机号
  string email = 17; // 邮箱
  uint32 status = 18; // 状态
}

message UserRelationship {
  int64 rid = 1; // 关系用户ID
  int64 attr = 2; // 关系类型
}

// 登录响应
message LoginResp {
  string access_token = 1; // 访问令牌
  string refresh_token = 2; // 刷新令牌
  int64 user_id = 3; // 用户ID
  User user_info = 4; // 用户信息
}

// 更新用户信息请求
message UpdateUserInfoReq {
  uint32 id = 1; // 用户ID
  optional string nickname = 2; // 昵称
  optional string avatar = 3; // 头像
  optional uint32 gender = 4; // 性别
  optional uint32 role = 5; // 角色
  optional string phone = 6; // 手机号
  optional string email = 7; // 邮箱
}

// 更新用户信息响应
message UpdateUserInfoResp {
  User user_info = 1; // 更新后的用户信息
}

// 登出请求
message LogoutReq {
  string access_token = 1;
  string refresh_token = 2; 
}

message LogoutResp {}



// 粉丝列表请求
message FollowerListReq {
  int64 action_id = 1; // 动作ID
  int64 page = 2; // 页码
  int64 page_size = 3; // 每页数量
  int64 total = 4; // 总数
}

// 粉丝列表响应
message FollowerListResp {
  int64 total = 1; // 总数
  repeated User list = 2; // 用户列表
}

// 关注列表请求
message FollowingListReq {
  int64 action_id = 1; // 动作ID
  int64 page = 2; // 页码
  int64 page_size = 3; // 每页数量
  int64 total = 4; // 总数
}

// 关注列表响应
message FollowingListResp {
  int64 total = 1; // 总数
  repeated User list = 2; // 用户列表
}

// 好友列表请求
message FriendListReq {
  int64 action_id = 1; // 动作ID
  int64 page = 2; // 页码
  int64 page_size = 3; // 每页数量
  int64 total = 4; // 总数
}

// 好友列表响应
message FriendListResp {
  int64 total = 1; // 总数
  repeated User list = 2; // 用户列表
}

message RefreshTokenReq {
  string refresh_token = 1; // 刷新令牌
  int64 user_id = 2; // 用户ID
}

message RefreshTokenResp {
  string access_token = 1; // 访问令牌
  string refresh_token = 2; // 刷新令牌
}

message AddFollowingReq{
  int64 uid = 1;
  int64 rid = 2;
}

message AddFollowingResp{

}

message DelFollowingReq{
  int64 uid = 1;
  int64 rid = 2;
}

message DelFollowingResp{

}

message AddWhisperReq{
  int64 uid = 1;
  int64 rid = 2;
}

message AddWhisperResp{

}

message DelWhisperReq{
  int64 uid = 1;
  int64 rid = 2;
}

message DelWhisperResp{

}

message AddBlackReq{
  int64 uid = 1;
  int64 rid = 2;
}

message AddBlackResp{

}

message DelBlackReq{
  int64 uid = 1;
  int64 rid = 2;
}

message DelBlackResp{

}

message GetUserRelationshipReq{
  int64 uid = 1;
  repeated int64 rids = 2;
}

message GetUserRelationshipResp{
  repeated UserRelationship list = 1;
}


// 服务定义
service UserRpcService {
  rpc LoginWithUsername(LoginWithUsernameReq) returns (LoginResp);
  rpc LoginWithEmail(LoginWithEmailReq) returns (LoginResp);
  rpc LoginWithPhone(LoginWithPhoneReq) returns (LoginResp);
  rpc Register(RegisterReq) returns (LoginResp);
  rpc UpdateUserInfo(UpdateUserInfoReq) returns (UpdateUserInfoResp);
  rpc Logout(LogoutReq) returns (LogoutResp);
  rpc FollowerList(FollowerListReq) returns (FollowerListResp);
  rpc FollowingList(FollowingListReq) returns (FollowingListResp);
  rpc FriendList(FriendListReq) returns (FriendListResp);
  rpc RefreshToken(RefreshTokenReq) returns (RefreshTokenResp);
  rpc AddFollowing(AddFollowingReq) returns (AddFollowingResp);
  rpc AddWhisper(AddWhisperReq) returns (AddWhisperResp);
  rpc AddBlack(AddBlackReq) returns (AddBlackResp);
  rpc DelFollowing(DelFollowingReq) returns (DelFollowingResp);
  rpc DelWhisper(DelWhisperReq) returns (DelWhisperResp);
  rpc DelBlack(DelBlackReq) returns (DelBlackResp);
  rpc GetUserRelationship(GetUserRelationshipReq) returns (GetUserRelationshipResp);
}