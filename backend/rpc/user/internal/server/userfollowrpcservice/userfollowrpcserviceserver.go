// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"backend/rpc/user/internal/logic/userfollowrpcservice"
	"backend/rpc/user/internal/svc"
	"backend/rpc/user/user"
)

type UserFollowRpcServiceServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserFollowRpcServiceServer
}

func NewUserFollowRpcServiceServer(svcCtx *svc.ServiceContext) *UserFollowRpcServiceServer {
	return &UserFollowRpcServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserFollowRpcServiceServer) FollowUser(ctx context.Context, in *user.FollowUserReq) (*user.FollowUserResp, error) {
	l := userfollowrpcservicelogic.NewFollowUserLogic(ctx, s.svcCtx)
	return l.FollowUser(in)
}

func (s *UserFollowRpcServiceServer) FollowerList(ctx context.Context, in *user.FollowerListReq) (*user.FollowerListResp, error) {
	l := userfollowrpcservicelogic.NewFollowerListLogic(ctx, s.svcCtx)
	return l.FollowerList(in)
}

func (s *UserFollowRpcServiceServer) FollowingList(ctx context.Context, in *user.FollowingListReq) (*user.FollowingListResp, error) {
	l := userfollowrpcservicelogic.NewFollowingListLogic(ctx, s.svcCtx)
	return l.FollowingList(in)
}

func (s *UserFollowRpcServiceServer) FriendList(ctx context.Context, in *user.FriendListReq) (*user.FriendListResp, error) {
	l := userfollowrpcservicelogic.NewFriendListLogic(ctx, s.svcCtx)
	return l.FriendList(in)
}
