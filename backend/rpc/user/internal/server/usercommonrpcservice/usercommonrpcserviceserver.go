// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"backend/rpc/user/internal/logic/usercommonrpcservice"
	"backend/rpc/user/internal/svc"
	"backend/rpc/user/user"
)

type UserCommonRpcServiceServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedUserCommonRpcServiceServer
}

func NewUserCommonRpcServiceServer(svcCtx *svc.ServiceContext) *UserCommonRpcServiceServer {
	return &UserCommonRpcServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserCommonRpcServiceServer) LoginWithUsername(ctx context.Context, in *user.LoginWithUsernameReq) (*user.LoginResp, error) {
	l := usercommonrpcservicelogic.NewLoginWithUsernameLogic(ctx, s.svcCtx)
	return l.LoginWithUsername(in)
}

func (s *UserCommonRpcServiceServer) LoginWithEmail(ctx context.Context, in *user.LoginWithEmailReq) (*user.LoginResp, error) {
	l := usercommonrpcservicelogic.NewLoginWithEmailLogic(ctx, s.svcCtx)
	return l.LoginWithEmail(in)
}

func (s *UserCommonRpcServiceServer) LoginWithPhone(ctx context.Context, in *user.LoginWithPhoneReq) (*user.LoginResp, error) {
	l := usercommonrpcservicelogic.NewLoginWithPhoneLogic(ctx, s.svcCtx)
	return l.LoginWithPhone(in)
}

func (s *UserCommonRpcServiceServer) Register(ctx context.Context, in *user.RegisterReq) (*user.LoginResp, error) {
	l := usercommonrpcservicelogic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *UserCommonRpcServiceServer) UpdateUserInfo(ctx context.Context, in *user.UpdateUserInfoReq) (*user.UpdateUserInfoResp, error) {
	l := usercommonrpcservicelogic.NewUpdateUserInfoLogic(ctx, s.svcCtx)
	return l.UpdateUserInfo(in)
}

func (s *UserCommonRpcServiceServer) Logout(ctx context.Context, in *user.LogoutReq) (*user.LogoutResp, error) {
	l := usercommonrpcservicelogic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}
