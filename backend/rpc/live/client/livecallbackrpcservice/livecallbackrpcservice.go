// Code generated by goctl. DO NOT EDIT.
// Source: live.proto

package livecallbackrpcservice

import (
	"context"

	"backend/rpc/live/live"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EndLiveReq           = live.EndLiveReq
	LiveComment          = live.LiveComment
	LiveCommentListReq   = live.LiveCommentListReq
	LiveCommentListResp  = live.LiveCommentListResp
	LiveCommentReq       = live.LiveCommentReq
	LiveCommentResp      = live.LiveCommentResp
	LiveDeleteCommentReq = live.LiveDeleteCommentReq
	LiveDetailReq        = live.LiveDetailReq
	LiveDetailResp       = live.LiveDetailResp
	LiveInfo             = live.LiveInfo
	LiveLikeReq          = live.LiveLikeReq
	LiveLikeResp         = live.LiveLikeResp
	LiveListReq          = live.LiveListReq
	LiveListResp         = live.LiveListResp
	OnPublicStreamReq    = live.OnPublicStreamReq
	OnPublicStreamResp   = live.OnPublicStreamResp
	OnStreamChangeReq    = live.OnStreamChangeReq
	OnStreamChangeResp   = live.OnStreamChangeResp
	StartLiveReq         = live.StartLiveReq
	User                 = live.User

	LiveCallbackRpcService interface {
		OnPublicStream(ctx context.Context, in *OnPublicStreamReq, opts ...grpc.CallOption) (*OnPublicStreamResp, error)
		OnStreamChange(ctx context.Context, in *OnStreamChangeReq, opts ...grpc.CallOption) (*OnStreamChangeResp, error)
	}

	defaultLiveCallbackRpcService struct {
		cli zrpc.Client
	}
)

func NewLiveCallbackRpcService(cli zrpc.Client) LiveCallbackRpcService {
	return &defaultLiveCallbackRpcService{
		cli: cli,
	}
}

func (m *defaultLiveCallbackRpcService) OnPublicStream(ctx context.Context, in *OnPublicStreamReq, opts ...grpc.CallOption) (*OnPublicStreamResp, error) {
	client := live.NewLiveCallbackRpcServiceClient(m.cli.Conn())
	return client.OnPublicStream(ctx, in, opts...)
}

func (m *defaultLiveCallbackRpcService) OnStreamChange(ctx context.Context, in *OnStreamChangeReq, opts ...grpc.CallOption) (*OnStreamChangeResp, error) {
	client := live.NewLiveCallbackRpcServiceClient(m.cli.Conn())
	return client.OnStreamChange(ctx, in, opts...)
}
