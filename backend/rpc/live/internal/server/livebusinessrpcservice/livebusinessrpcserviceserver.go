// Code generated by goctl. DO NOT EDIT.
// Source: live.proto

package server

import (
	"context"

	"backend/rpc/live/internal/logic/livebusinessrpcservice"
	"backend/rpc/live/internal/svc"
	"backend/rpc/live/live"
)

type LiveBusinessRpcServiceServer struct {
	svcCtx *svc.ServiceContext
	live.UnimplementedLiveBusinessRpcServiceServer
}

func NewLiveBusinessRpcServiceServer(svcCtx *svc.ServiceContext) *LiveBusinessRpcServiceServer {
	return &LiveBusinessRpcServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *LiveBusinessRpcServiceServer) StartLive(ctx context.Context, in *live.StartLiveReq) (*live.LiveDetailResp, error) {
	l := livebusinessrpcservicelogic.NewStartLiveLogic(ctx, s.svcCtx)
	return l.StartLive(in)
}

func (s *LiveBusinessRpcServiceServer) EndLive(ctx context.Context, in *live.EndLiveReq) (*live.LiveDetailResp, error) {
	l := livebusinessrpcservicelogic.NewEndLiveLogic(ctx, s.svcCtx)
	return l.EndLive(in)
}

func (s *LiveBusinessRpcServiceServer) LiveComment(ctx context.Context, in *live.LiveCommentReq) (*live.LiveCommentResp, error) {
	l := livebusinessrpcservicelogic.NewLiveCommentLogic(ctx, s.svcCtx)
	return l.LiveComment(in)
}

func (s *LiveBusinessRpcServiceServer) LiveLike(ctx context.Context, in *live.LiveLikeReq) (*live.LiveLikeResp, error) {
	l := livebusinessrpcservicelogic.NewLiveLikeLogic(ctx, s.svcCtx)
	return l.LiveLike(in)
}

func (s *LiveBusinessRpcServiceServer) LiveDeleteComment(ctx context.Context, in *live.LiveDeleteCommentReq) (*live.LiveCommentResp, error) {
	l := livebusinessrpcservicelogic.NewLiveDeleteCommentLogic(ctx, s.svcCtx)
	return l.LiveDeleteComment(in)
}

func (s *LiveBusinessRpcServiceServer) LiveListByGorse(ctx context.Context, in *live.LiveListReq) (*live.LiveListResp, error) {
	l := livebusinessrpcservicelogic.NewLiveListByGorseLogic(ctx, s.svcCtx)
	return l.LiveListByGorse(in)
}

func (s *LiveBusinessRpcServiceServer) LiveList(ctx context.Context, in *live.LiveListReq) (*live.LiveListResp, error) {
	l := livebusinessrpcservicelogic.NewLiveListLogic(ctx, s.svcCtx)
	return l.LiveList(in)
}

func (s *LiveBusinessRpcServiceServer) LiveCommentList(ctx context.Context, in *live.LiveCommentListReq) (*live.LiveCommentListResp, error) {
	l := livebusinessrpcservicelogic.NewLiveCommentListLogic(ctx, s.svcCtx)
	return l.LiveCommentList(in)
}

func (s *LiveBusinessRpcServiceServer) LiveInfo(ctx context.Context, in *live.LiveDetailReq) (*live.LiveDetailResp, error) {
	l := livebusinessrpcservicelogic.NewLiveInfoLogic(ctx, s.svcCtx)
	return l.LiveInfo(in)
}
