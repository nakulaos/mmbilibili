// Code generated by goctl. DO NOT EDIT.
// Source: live.proto

package server

import (
	"context"

	"backend/rpc/live/internal/logic/livecallbackrpcservice"
	"backend/rpc/live/internal/svc"
	"backend/rpc/live/live"
)

type LiveCallbackRpcServiceServer struct {
	svcCtx *svc.ServiceContext
	live.UnimplementedLiveCallbackRpcServiceServer
}

func NewLiveCallbackRpcServiceServer(svcCtx *svc.ServiceContext) *LiveCallbackRpcServiceServer {
	return &LiveCallbackRpcServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *LiveCallbackRpcServiceServer) OnPublicStream(ctx context.Context, in *live.OnPublicStreamReq) (*live.OnPublicStreamResp, error) {
	l := livecallbackrpcservicelogic.NewOnPublicStreamLogic(ctx, s.svcCtx)
	return l.OnPublicStream(in)
}

func (s *LiveCallbackRpcServiceServer) OnStreamChange(ctx context.Context, in *live.OnStreamChangeReq) (*live.OnStreamChangeResp, error) {
	l := livecallbackrpcservicelogic.NewOnStreamChangeLogic(ctx, s.svcCtx)
	return l.OnStreamChange(in)
}
